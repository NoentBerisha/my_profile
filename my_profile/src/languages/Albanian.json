{
  "personalDetails": "Detajet Personale",
  "education": "Arsimi",
  "languages": "Gjuhët",
  "skills": "Aftësitë",
  "certifications": "Certifikatat",
  "experience": "Përvoja",
  "projects": "Projektet",
  "cv": "CV",
  "name": "Emri",
  "surname": "Mbiemri",
  "email": "Email",
  "phone": "Telefoni",
  "githubLink": "Github",
  "seeCV": "Shiko CV",
  "projectDescription": "Përshkrimi i projektit...",
  "experienceItem1": "Zhvilluar dhe mirëmbajtur aplikacione web që lehtësojnë ndarjen e informacionit në kohë reale dhe menaxhimin e shërbimeve",
  "experienceItem2": "Përdorur Java (Spring Boot) për mikroshërbime backend, duke siguruar përpunim efikas të të dhënave dhe arkitekturë të shkallëzueshme",
  "experienceItem3": "Zbatuar veçori dinamike frontend duke përdorur React, duke integruar me shërbimet backend përmes API-ve RESTful",
  "experienceItem4": "Menaxhuar dhe optimizuar bazat e të dhënave duke përdorur MySQL dhe MongoDB për ruajtje dhe rikuperim efektiv të të dhënave. Përdorur Docker dhe Kubernetes për vendosje dhe shkallëzim",
  "xDental": "X Dental App është një Website i krijuar për një klinikë dentare, duke përdorur React për frontend-in, Spring Boot për backend-in dhe Docker për menaxhimin e bazës së të dhënave. Website ofron informacion të detajuar mbi shërbimet e klinikës, profilin e dentistëve, lokacionin dhe disa opsione kontakti. Ajo ka një sistem të integruar kalendar që lejon dentistët të planifikojnë dhe menaxhojnë disponueshmërinë e tyre, duke lejuar gjithashtu pacientët të shohin disponueshmërinë e dentistëve.",
  "industrial": "Potizo është një aplikacion web i krijuar gjatë studimeve të mia të bachelor-it, i cili perdoret nga komuna e Selanikut. Platforma lejon përdoruesit të shohin pemët brenda qytetit dhe lejon përdoruesit e regjistruar të adoptojnë dhe mbajnë këto pemë, duke promovuar angazhimin e komunitetit në gjelbërimin urban. I ndërtuar me React për frontend-in dhe Node.js me Express për backend-in, si dhe bazë të dhënash të menaxhuar në Docker. Projekti përdor metodologjitë më të reja të kodimit për të siguruar performancë të lartë dhe mirëmbajtshmëri.",
  "chatApp": "Ky është një projekt i cili eshte krijuar vetwm per mësim, i ndërtuar për të eksploruar përdorimin e WebSockets. I zhvilluar duke përdorur Spring Boot për backend-in dhe React për frontend-in, ai mundëson mesazhe në kohë reale përmes WebSockets. Mesazhet ruhen në një bazë të dhënash MySQL të menaxhuar nëpërmjet Docker-it. Ky është një microservice i pavarur që më vonë mund të përdoret në një projekt që kërkon një funksionalitet të tillë.",
  "Os": "Ky projekt, i zhvilluar gjatë studimeve të mia të bachelor-it, simulojnë RAM-in duke përdorur Processing.js. Ai tregon algoritme të ndryshme të menaxhimit të memories, si First In First Out (FIFO), Round Robin etj. Ofron një përfaqësim vizual të mënyrës sesi funksionon secili algoritëm. Simulimi lejon përdoruesit të vëzhgojnë dinamikën e alokimit dhe menaxhimit të memories në kohë reale. Për më tepër, projekti ka funksionalitet për coalescing e dy segmenteve të zbrazëta të RAM-it, duke krijuar një bllok më të madh të vazhdueshëm të memories për të rritur efikasitetin dhe për të optimizuar hapësirën për programet e reja.",
  "socialMedia": "Ky projekt është një platformë sociale e zhvilluar duke përdorur React për frontend-in dhe Node.js për backend-in, e ndërtuar për qëllime mësimore. Aktualisht është një projekt në zhvillim, me qëllimin për të strukturuar backend-in në mikroservice të veçanta, duke siguruar modularitet.",
  "thesis": "Për temen time, zhvillova një aplikacion te quajtur asistent udhëtimi duke përdorur microservice dhe mikrofrontend. Frontendi u ndërtua me React, ndërsa backend-i përdori Spring Boot. Përdora Kubernetes për përditësime të vazhdueshme dhe scaling efikas të shërbimeve, duke siguruar availability të lartë duke balancuar ngarkesat nëpërmjet shumë instanceve të microservices. Për të lehtësuar komunikimin mes shërbimeve, implementova Google Pub/Sub, duke mundësuar mesazhe të besueshme dhe një arkitekturë të bazuar në ngjarje. Baza e të dhënave u menaxhua me MongoDB, e cila funksionon në Docker, duke lejuar ruajtje dhe rikuperim të dhënash fleksibël. Për më tepër, përdora Eureka duke e bërë më të lehtë që mikorservices të lokalizohen dinamikisht, dhe një API Gateway për të centralizuar dhe thjeshtuar komunikimin e jashtëm, duke rritur sigurinë dhe kontrollin e aksesit. Micorservices u dizajnuan për t'u ripërdorur dhe qenë fleksibël, duke mundësuar ndryshime minimale kur shtohen komponentë të rinj, të cilat përmirësuan ekstensibilitetin. Siguria u forcuar duke përdorur filtra dhe autentifikim të bazuar në token për të mbrojtur burimet. Ndërfaqja e përdoruesit iu përmbajt parimeve të Nielsen-it, duke ofruar një përvojë vizualisht tërheqëse dhe të lehtë për t'u naviguar.",
  "webYear1": "Ky projekt, i zhvilluar gjatë studimeve të mia të bachelor-it, është një website i krijuar duke përdorur HTML, CSS, JavaScript, dhe jQuery. Ai shërben si një platformë informuese ku përdoruesit mund të eksplorojnë një gamë të gjerë temash, duke përfshirë mjekësinë, fizikën, teknologjinë, dhe më shumë. Website-i ofron një ndërfaqe miqësore për përdoruesit për qasje në përmbajtje të ndryshme në fushat e interesit.",
  "deployDestroy": "Deploy Destroy është një lojë strategjie e zhvilluar duke përdorur Java Swing si pjesë e studimeve të mia të bachelor-it. Në lojë, lojtarët deployojnë njësitë e ndryshme në një fushë beteje dhe angazhohen në luftë taktike, duke synuar të dëmtojnë dhe eliminojnë forcat armike. Loja përfshin planifikim të kujdesshëm dhe vendosje strategjike të njësive, duke kërkuar që lojtarët të mendojnë përpara dhe të marrin vendime të shpejta për të fituar një avantazh dhe përfundimisht për të shkatërruar bazën e kundërshtarit. GUI e përdoruesit është e ndërtuar me Java Swing, duke ofruar një përvojë interaktive së bashku me animacione."
}